{"ast":null,"code":"import _classCallCheck from \"E:\\\\Online Fashion Store\\\\online_fashion_store_angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"E:\\\\Online Fashion Store\\\\online_fashion_store_angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var ContactsService = /*#__PURE__*/(function () {\n  var ContactsService = /*#__PURE__*/function () {\n    function ContactsService(http) {\n      _classCallCheck(this, ContactsService);\n\n      this.http = http;\n      this.baseUrl = 'http://127.0.0.1:8080/api/v1/contact';\n    }\n\n    _createClass(ContactsService, [{\n      key: \"getContacts\",\n      value: function getContacts(id) {\n        return this.http.get(\"\".concat(this.baseUrl, \"/\").concat(id));\n      }\n    }, {\n      key: \"createContacts\",\n      value: function createContacts(contacts) {\n        return this.http.post(\"\".concat(this.baseUrl), contacts);\n      }\n    }, {\n      key: \"updateContacts\",\n      value: function updateContacts(id, value) {\n        return this.http.put(\"\".concat(this.baseUrl, \"/\").concat(id), value);\n      }\n    }, {\n      key: \"updateUploadContacts\",\n      value: function updateUploadContacts(id, contacts) {\n        return this.http.post(\"\".concat(this.baseUrl, \"/\").concat(id), contacts);\n      }\n    }, {\n      key: \"deleteContacts\",\n      value: function deleteContacts(id) {\n        return this.http.delete(\"\".concat(this.baseUrl, \"/\").concat(id), {\n          responseType: 'text'\n        });\n      }\n    }, {\n      key: \"getContactsList\",\n      value: function getContactsList(id) {\n        return this.http.get(\"\".concat(this.baseUrl, \"/all-contacts/\").concat(id));\n      }\n    }, {\n      key: \"getAllContacts\",\n      value: function getAllContacts() {\n        return this.http.get(\"\".concat(this.baseUrl));\n      }\n    }]);\n\n    return ContactsService;\n  }();\n\n  ContactsService.ɵfac = function ContactsService_Factory(t) {\n    return new (t || ContactsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ContactsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContactsService,\n    factory: ContactsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContactsService;\n})();","map":null,"metadata":{},"sourceType":"module"}